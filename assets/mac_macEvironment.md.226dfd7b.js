import{_ as l,o,c as p,k as s,a as e,t as n,Q as t}from"./chunks/framework.551abb59.js";const c="/power-blog/assets/image.d80f788b.png",v=JSON.parse('{"title":"mac开发配置","description":"作为一个前端开发工程师，搭建一个舒适的本地开发环境","frontmatter":{"title":"mac开发配置","author":"power","description":"作为一个前端开发工程师，搭建一个舒适的本地开发环境","date":"2023-09-23T12:08:21.000Z","link":"./mac/macEvironment","tags":["mac"]},"headers":[],"relativePath":"mac/macEvironment.md","filePath":"mac/macEvironment.md","lastUpdated":1695572892000}'),r={name:"mac/macEvironment.md"},i={id:"frontmatter-title",tabindex:"-1"},y=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{$frontmatter.title}}"'},"​",-1),E=t(`<h2 id="mac-系统下-配置了-ssh-keys-每次操作都提示-enter-passphrase-for-key-输入密码" tabindex="-1">Mac 系统下 配置了 SSH keys，每次操作都提示 &quot;Enter passphrase for key&quot; 输入密码 <a class="header-anchor" href="#mac-系统下-配置了-ssh-keys-每次操作都提示-enter-passphrase-for-key-输入密码" aria-label="Permalink to &quot;Mac 系统下 配置了 SSH keys，每次操作都提示 &quot;Enter passphrase for key&quot; 输入密码&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"># ssh-add 命令是把专用密钥添加到ssh-agent的高速缓存</span></span>
<span class="line"><span style="color:#e1e4e8;">ssh-add ~/.ssh/id_rsa</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"># ssh-add 命令是把专用密钥添加到ssh-agent的高速缓存</span></span>
<span class="line"><span style="color:#24292e;">ssh-add ~/.ssh/id_rsa</span></span></code></pre></div><h2 id="安装-iterm2" tabindex="-1">安装 iterm2 <a class="header-anchor" href="#安装-iterm2" aria-label="Permalink to &quot;安装 iterm2&quot;">​</a></h2><p>唤醒热键 给终端加一个快速唤醒/隐藏的快捷键是必须要做的，否则用鼠标找到终端的快捷方式再打开这种做法不仅慢而且逼格低，设置方式 iterm2 -&gt; Preferences -&gt; Keys -&gt; Hotkey <img src="`+c+`" alt="Alt text"></p><h3 id="个人喜好这里建议给-iterm2-配置一个透明度-看起来体验感舒适很多-iterm2-preferences-profiles-window-transparency" tabindex="-1">个人喜好这里建议给 iterm2 配置一个透明度，看起来体验感舒适很多 iterm2 -&gt; Preferences -&gt; Profiles -&gt; Window -&gt; Transparency <a class="header-anchor" href="#个人喜好这里建议给-iterm2-配置一个透明度-看起来体验感舒适很多-iterm2-preferences-profiles-window-transparency" aria-label="Permalink to &quot;个人喜好这里建议给 iterm2 配置一个透明度，看起来体验感舒适很多 iterm2 -&gt; Preferences -&gt; Profiles -&gt; Window -&gt; Transparency&quot;">​</a></h3><h3 id="快捷键使用" tabindex="-1">快捷键使用 <a class="header-anchor" href="#快捷键使用" aria-label="Permalink to &quot;快捷键使用&quot;">​</a></h3><ul><li>ctrl + a/e 快速切换到当前正在输入的文本的头部／尾部</li><li>ctrl + u 清空当前输入</li><li>cmd + T 打开一个新的 iterm2 Tab</li><li>cmd + 方向键 左右切换 Tab</li><li>cmd + D 分屏</li><li>cmd + K 清屏</li><li>cmd + N 打开一个新的 iterm2 窗口</li></ul><h2 id="安装-zsh" tabindex="-1">安装 zsh <a class="header-anchor" href="#安装-zsh" aria-label="Permalink to &quot;安装 zsh&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sh</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-fsSL</span><span style="color:#9ECBFF;"> https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 更换主题</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vim</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.zshrc</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 打开zsh配置文件</span></span>
<span class="line"><span style="color:#B392F0;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ZSH_THEME</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;ys&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 在第10行设置当前主题为ys</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">source</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.zshrc</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 重新执行一遍zsh配置文件</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sh</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-fsSL</span><span style="color:#032F62;"> https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 更换主题</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vim</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.zshrc</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 打开zsh配置文件</span></span>
<span class="line"><span style="color:#6F42C1;">10</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ZSH_THEME</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;ys&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 在第10行设置当前主题为ys</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">source</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.zshrc</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 重新执行一遍zsh配置文件</span></span></code></pre></div><h1 id="安装插件" tabindex="-1">安装插件 <a class="header-anchor" href="#安装插件" aria-label="Permalink to &quot;安装插件&quot;">​</a></h1><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 增加插件</span></span>
<span class="line"><span style="color:#B392F0;">vim</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.zshrc</span></span>
<span class="line"><span style="color:#B392F0;">plugins</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">git</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">autojump</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">zsh-autosuggestions</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">zsh-syntax-highlighting</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">last-working-dir</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">source</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.zshrc</span></span>
<span class="line"><span style="color:#6A737D;"># 自动补全提示</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/zsh-users/zsh-autosuggestions</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.oh-my-zsh/custom/plugins/zsh-autosuggestions</span></span>
<span class="line"><span style="color:#6A737D;"># 高亮git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">source</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.zshrc</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 增加插件</span></span>
<span class="line"><span style="color:#6F42C1;">vim</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.zshrc</span></span>
<span class="line"><span style="color:#6F42C1;">plugins</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">git</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">autojump</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">zsh-autosuggestions</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">zsh-syntax-highlighting</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">last-working-dir</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">source</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.zshrc</span></span>
<span class="line"><span style="color:#6A737D;"># 自动补全提示</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/zsh-users/zsh-autosuggestions</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.oh-my-zsh/custom/plugins/zsh-autosuggestions</span></span>
<span class="line"><span style="color:#6A737D;"># 高亮git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">source</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.zshrc</span></span></code></pre></div><h2 id="npm-link" tabindex="-1">npm link <a class="header-anchor" href="#npm-link" aria-label="Permalink to &quot;npm link&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vue</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">进入本地clone下来的vue文件夹</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">link</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">如果没有全局安装过vue</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">此时会创建全局node_modules下的一个软链接vue指向本地clone的vue入口文件</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">link</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vue</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">在需要用调试vue模块的应用执行该命令会将当前应用的node_modules/vue指向全局node_modules/vue软链接</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vue</span><span style="color:#24292E;"> </span><span style="color:#032F62;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">进入本地clone下来的vue文件夹</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">link</span><span style="color:#24292E;"> </span><span style="color:#032F62;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">如果没有全局安装过vue</span><span style="color:#24292E;"> </span><span style="color:#032F62;">此时会创建全局node_modules下的一个软链接vue指向本地clone的vue入口文件</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">link</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vue</span><span style="color:#24292E;"> </span><span style="color:#032F62;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">在需要用调试vue模块的应用执行该命令会将当前应用的node_modules/vue指向全局node_modules/vue软链接</span></span></code></pre></div><h2 id="vim-快捷键" tabindex="-1">vim 快捷键 <a class="header-anchor" href="#vim-快捷键" aria-label="Permalink to &quot;vim 快捷键&quot;">​</a></h2><ul><li>:wq 退出 vim。stackoverflow 每日搜索次数第一问题，如何退出 vim:)</li><li>i 进入插入模式</li><li>q 进入可视模式，可以用光标来选择文本</li><li>jk 上下移动</li><li>hl 左右移动</li><li>ctrl + b/f 上下翻页</li><li>0/$ 光标快速移动到行首／行尾</li><li>/ 搜索</li><li>n/N 跳转到下一个／上一个 搜索词</li><li>😒/old/new/g 单行替换</li><li>:%s/old/new/g 全局替换</li></ul><h2 id="安装插件-janus" tabindex="-1">安装插件 janus <a class="header-anchor" href="#安装插件-janus" aria-label="Permalink to &quot;安装插件 janus&quot;">​</a></h2><ul><li>显示行号</li><li>文本高亮, 搜索高亮</li><li>句尾显示.号</li><li>轻松切换多种显示方式，水平显示 or 垂直显示</li></ul><p>参考 <a href="http://fe.ssr-fc.com/" target="_blank" rel="noreferrer">打造舒适高效的前端开发环境</a></p><p>vscode 折叠所有：cmd+ 0</p>`,19);function h(a,d,u,F,m,g){return o(),p("div",null,[s("h1",i,[e(n(a.$frontmatter.title)+" ",1),y]),s("ul",null,[s("li",null,n(a.$frontmatter.description),1)]),E])}const k=l(r,[["render",h]]);export{v as __pageData,k as default};
