import{_ as p,o as l,c as o,k as s,a as e,t as a,Q as t}from"./chunks/framework.9133f087.js";const A=JSON.parse('{"title":"vite 源码解析（版本：5.0.0-beta.2）","description":"在 webpack 横行的时代，webpack 的影响力几乎统治了 web 前端，react，vue-cli 等等工具都借助于 webpack 构建。在使用过程中，Webpack 构建十几个页面几百个组件的应用的性能出现了严重下降，说句公道话，webpack 的性能其实是很好的，最大的问题是配置过于复杂，导致绝大多数人不能正确的配置导致性能下降。天下苦 webpack 久矣，在这个时候，尤大巧妙的利用 esbuild 和 rollup，借助浏览器原生的 esm 能力创造的 vite 横空出世。一旦体验过，就再也回不去了","frontmatter":{"title":"vite 源码解析（版本：5.0.0-beta.2）","author":"power","description":"在 webpack 横行的时代，webpack 的影响力几乎统治了 web 前端，react，vue-cli 等等工具都借助于 webpack 构建。在使用过程中，Webpack 构建十几个页面几百个组件的应用的性能出现了严重下降，说句公道话，webpack 的性能其实是很好的，最大的问题是配置过于复杂，导致绝大多数人不能正确的配置导致性能下降。天下苦 webpack 久矣，在这个时候，尤大巧妙的利用 esbuild 和 rollup，借助浏览器原生的 esm 能力创造的 vite 横空出世。一旦体验过，就再也回不去了","date":"2023-09-21T12:46:28.000Z","link":"./frontend/Vite","tags":["源码"]},"headers":[],"relativePath":"frontend/Vite.md","filePath":"frontend/Vite.md","lastUpdated":1695639913000}'),c={name:"frontend/Vite.md"},r={id:"frontmatter-title",tabindex:"-1"},E=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{$frontmatter.title}}"'},"​",-1),y=s("pre",{class:"mermaid"},`          graph TD 
          A[Client] --> B[Load Balancer] 
          B --> C[Server1] 
          B --> D[Server2]
  `,-1),i=t(`<h3 id="时间对比" tabindex="-1">-时间对比 <a class="header-anchor" href="#时间对比" aria-label="Permalink to &quot;-时间对比&quot;">​</a></h3><ul><li>Webpack：启动时间 = 初始化模块加载 + 编译服务端/客户端 bundle 时间 + Midway</li><li>vite： 启动时间 = 更少的初始化模块加载 + Midway 启动时间</li></ul><h3 id="问题-作为一个打包构建工具需要解决以下基本问题" tabindex="-1">问题：作为一个打包构建工具需要解决以下基本问题 <a class="header-anchor" href="#问题-作为一个打包构建工具需要解决以下基本问题" aria-label="Permalink to &quot;问题：作为一个打包构建工具需要解决以下基本问题&quot;">​</a></h3><ul><li>1、vite 如何为开发提供开发环境的</li><li>2、文件更改，vite 如何热更新</li><li>3、vite 如何进行打包的</li></ul><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">├── CHANGELOG.md</span></span>
<span class="line"><span style="color:#e1e4e8;">├── LICENSE.md</span></span>
<span class="line"><span style="color:#e1e4e8;">├── README.md</span></span>
<span class="line"><span style="color:#e1e4e8;">├── api-extractor.json</span></span>
<span class="line"><span style="color:#e1e4e8;">├── bin # 指令目录</span></span>
<span class="line"><span style="color:#e1e4e8;">├── client.d.ts</span></span>
<span class="line"><span style="color:#e1e4e8;">├── dist</span></span>
<span class="line"><span style="color:#e1e4e8;">├── index.cjs</span></span>
<span class="line"><span style="color:#e1e4e8;">├── index.d.cts</span></span>
<span class="line"><span style="color:#e1e4e8;">├── node_modules</span></span>
<span class="line"><span style="color:#e1e4e8;">├── package.json</span></span>
<span class="line"><span style="color:#e1e4e8;">├── rollup.config.ts</span></span>
<span class="line"><span style="color:#e1e4e8;">├── rollupLicensePlugin.ts</span></span>
<span class="line"><span style="color:#e1e4e8;">├── scripts</span></span>
<span class="line"><span style="color:#e1e4e8;">├── src  #存放源码</span></span>
<span class="line"><span style="color:#e1e4e8;">├── tsconfig.base.json</span></span>
<span class="line"><span style="color:#e1e4e8;">├── tsconfig.check.json</span></span>
<span class="line"><span style="color:#e1e4e8;">├── tsconfig.json</span></span>
<span class="line"><span style="color:#e1e4e8;">└── types</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">├── CHANGELOG.md</span></span>
<span class="line"><span style="color:#24292e;">├── LICENSE.md</span></span>
<span class="line"><span style="color:#24292e;">├── README.md</span></span>
<span class="line"><span style="color:#24292e;">├── api-extractor.json</span></span>
<span class="line"><span style="color:#24292e;">├── bin # 指令目录</span></span>
<span class="line"><span style="color:#24292e;">├── client.d.ts</span></span>
<span class="line"><span style="color:#24292e;">├── dist</span></span>
<span class="line"><span style="color:#24292e;">├── index.cjs</span></span>
<span class="line"><span style="color:#24292e;">├── index.d.cts</span></span>
<span class="line"><span style="color:#24292e;">├── node_modules</span></span>
<span class="line"><span style="color:#24292e;">├── package.json</span></span>
<span class="line"><span style="color:#24292e;">├── rollup.config.ts</span></span>
<span class="line"><span style="color:#24292e;">├── rollupLicensePlugin.ts</span></span>
<span class="line"><span style="color:#24292e;">├── scripts</span></span>
<span class="line"><span style="color:#24292e;">├── src  #存放源码</span></span>
<span class="line"><span style="color:#24292e;">├── tsconfig.base.json</span></span>
<span class="line"><span style="color:#24292e;">├── tsconfig.check.json</span></span>
<span class="line"><span style="color:#24292e;">├── tsconfig.json</span></span>
<span class="line"><span style="color:#24292e;">└── types</span></span></code></pre></div><h1 id="配置调试环境" tabindex="-1">配置调试环境 <a class="header-anchor" href="#配置调试环境" aria-label="Permalink to &quot;配置调试环境&quot;">​</a></h1><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 创建</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vue@3</span></span>
<span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span></span>
<span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 创建</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vue@3</span></span>
<span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span></span>
<span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dev</span></span></code></pre></div><ul><li><p>克隆 vite 源码，添加 sourcemap，克隆 dist 文件到 node_modules 上</p></li><li><p>vscode 配置</p></li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;name&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;debugger&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;request&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;launch&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;runtimeArgs&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;run-script&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;dev&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;runtimeExecutable&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;npm&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;console&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;integratedTerminal&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 内部终端</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;skipFiles&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;&lt;node_internals&gt;/**&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;node&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;cwd&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;\${workspaceFolder}&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;resolveSourceMapLocations&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;\${workspaceFolder}/**&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;debugger&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;request&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;launch&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;runtimeArgs&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;run-script&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;dev&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;runtimeExecutable&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;npm&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;console&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;integratedTerminal&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 内部终端</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;skipFiles&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;&lt;node_internals&gt;/**&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;node&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;cwd&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;\${workspaceFolder}&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;resolveSourceMapLocations&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;\${workspaceFolder}/**&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h1 id="开始" tabindex="-1">开始 <a class="header-anchor" href="#开始" aria-label="Permalink to &quot;开始&quot;">​</a></h1><p>1、第一个问题</p><ul><li>简单来说通过 http 和 ws 库启动 http 和 socket 服务</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">_createServer</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">inlineConfig</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {}, </span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 解析配置</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resolveConfig</span><span style="color:#E1E4E8;">(inlineConfig, </span><span style="color:#9ECBFF;">&#39;serve&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">root</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">server</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">serverConfig</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> config;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">httpsOptions</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resolveHttpsConfig</span><span style="color:#E1E4E8;">(config.server.https);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">middlewareMode</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> serverConfig;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">resolvedWatchOptions</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resolveChokidarOptions</span><span style="color:#E1E4E8;">(config, {</span></span>
<span class="line"><span style="color:#E1E4E8;">    disableGlobbing: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">serverConfig.watch,</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">middlewares</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">connect</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 创建http和socket</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">httpServer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> middlewareMode </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resolveHttpServer</span><span style="color:#E1E4E8;">(serverConfig, middlewares, httpsOptions);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ws</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createWebSocketServer</span><span style="color:#E1E4E8;">(httpServer, config, httpsOptions);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (httpServer) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">setClientErrorHandler</span><span style="color:#E1E4E8;">(httpServer, config.logger);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resolveHttpServer</span><span style="color:#E1E4E8;">({ </span><span style="color:#FFAB70;">proxy</span><span style="color:#E1E4E8;"> }, </span><span style="color:#FFAB70;">app</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">httpsOptions</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">httpsOptions) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">createServer</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;node:http&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createServer</span><span style="color:#E1E4E8;">(app);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createWebSocketServer</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">server</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">config</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">httpsOptions</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> wss;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> wsHttpServer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hmr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isObject</span><span style="color:#E1E4E8;">(config.server.hmr) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> config.server.hmr;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hmrServer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> hmr </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> hmr.server;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hmrPort</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> hmr </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> hmr.port;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// TODO: the main server port may not have been chosen yet as it may use the next available</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">portsAreCompatible</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">hmrPort </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> hmrPort </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> config.server.port;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">wsServer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> hmrServer </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> (portsAreCompatible </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> server);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> hmrServerWsListener;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">customListeners</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Map</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">clientsMap</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WeakMap</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">port</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> hmrPort </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">24678</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">host</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (hmr </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> hmr.host) </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (wsServer) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> hmrBase </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> config.base;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hmrPath</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> hmr </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> hmr.path </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (hmrPath) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      hmrBase </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> path.posix.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(hmrBase, hmrPath);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 来自ws库</span></span>
<span class="line"><span style="color:#E1E4E8;">    wss </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WebSocketServerRaw</span><span style="color:#E1E4E8;">({ noServer: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">hmrServerWsListener</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">socket</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">head</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (req.headers[</span><span style="color:#9ECBFF;">&#39;sec-websocket-protocol&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">HMR_HEADER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> req.url </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> hmrBase) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        wss.</span><span style="color:#B392F0;">handleUpgrade</span><span style="color:#E1E4E8;">(req, socket, head, (</span><span style="color:#FFAB70;">ws</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          wss.</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;connection&#39;</span><span style="color:#E1E4E8;">, ws, req);</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">    wsServer.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;upgrade&#39;</span><span style="color:#E1E4E8;">, hmrServerWsListener);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">_createServer</span><span style="color:#24292E;">(</span><span style="color:#E36209;">inlineConfig</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}, </span><span style="color:#E36209;">options</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 解析配置</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">config</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resolveConfig</span><span style="color:#24292E;">(inlineConfig, </span><span style="color:#032F62;">&#39;serve&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">root</span><span style="color:#24292E;">, </span><span style="color:#E36209;">server</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">serverConfig</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> config;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">httpsOptions</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resolveHttpsConfig</span><span style="color:#24292E;">(config.server.https);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">middlewareMode</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> serverConfig;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">resolvedWatchOptions</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resolveChokidarOptions</span><span style="color:#24292E;">(config, {</span></span>
<span class="line"><span style="color:#24292E;">    disableGlobbing: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">serverConfig.watch,</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">middlewares</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">connect</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 创建http和socket</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">httpServer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> middlewareMode </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resolveHttpServer</span><span style="color:#24292E;">(serverConfig, middlewares, httpsOptions);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ws</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createWebSocketServer</span><span style="color:#24292E;">(httpServer, config, httpsOptions);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (httpServer) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">setClientErrorHandler</span><span style="color:#24292E;">(httpServer, config.logger);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resolveHttpServer</span><span style="color:#24292E;">({ </span><span style="color:#E36209;">proxy</span><span style="color:#24292E;"> }, </span><span style="color:#E36209;">app</span><span style="color:#24292E;">, </span><span style="color:#E36209;">httpsOptions</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">httpsOptions) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">createServer</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">import</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;node:http&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createServer</span><span style="color:#24292E;">(app);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createWebSocketServer</span><span style="color:#24292E;">(</span><span style="color:#E36209;">server</span><span style="color:#24292E;">, </span><span style="color:#E36209;">config</span><span style="color:#24292E;">, </span><span style="color:#E36209;">httpsOptions</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> wss;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> wsHttpServer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">hmr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isObject</span><span style="color:#24292E;">(config.server.hmr) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> config.server.hmr;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">hmrServer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> hmr </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> hmr.server;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">hmrPort</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> hmr </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> hmr.port;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// TODO: the main server port may not have been chosen yet as it may use the next available</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">portsAreCompatible</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">hmrPort </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> hmrPort </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> config.server.port;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">wsServer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> hmrServer </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> (portsAreCompatible </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> server);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> hmrServerWsListener;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">customListeners</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Map</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">clientsMap</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WeakMap</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">port</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> hmrPort </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">24678</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">host</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (hmr </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> hmr.host) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (wsServer) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> hmrBase </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> config.base;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">hmrPath</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> hmr </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> hmr.path </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (hmrPath) {</span></span>
<span class="line"><span style="color:#24292E;">      hmrBase </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path.posix.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(hmrBase, hmrPath);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 来自ws库</span></span>
<span class="line"><span style="color:#24292E;">    wss </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebSocketServerRaw</span><span style="color:#24292E;">({ noServer: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> });</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">hmrServerWsListener</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">req</span><span style="color:#24292E;">, </span><span style="color:#E36209;">socket</span><span style="color:#24292E;">, </span><span style="color:#E36209;">head</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (req.headers[</span><span style="color:#032F62;">&#39;sec-websocket-protocol&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">HMR_HEADER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> req.url </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> hmrBase) {</span></span>
<span class="line"><span style="color:#24292E;">        wss.</span><span style="color:#6F42C1;">handleUpgrade</span><span style="color:#24292E;">(req, socket, head, (</span><span style="color:#E36209;">ws</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          wss.</span><span style="color:#6F42C1;">emit</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;connection&#39;</span><span style="color:#24292E;">, ws, req);</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span>
<span class="line"><span style="color:#24292E;">    wsServer.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;upgrade&#39;</span><span style="color:#24292E;">, hmrServerWsListener);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>第二个问题，vite 如何实现热更新</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">// chokidar监听文件变化</span></span>
<span class="line"><span style="color:#e1e4e8;">  const watcher = watchEnabled</span></span>
<span class="line"><span style="color:#e1e4e8;">        ? chokidar.watch(</span></span>
<span class="line"><span style="color:#e1e4e8;">        // config file dependencies and env file might be outside of root</span></span>
<span class="line"><span style="color:#e1e4e8;">        [root, ...config.configFileDependencies, config.envDir], resolvedWatchOptions)</span></span>
<span class="line"><span style="color:#e1e4e8;">        : createNoopWatcher(resolvedWatchOptions);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">// chokidar监听文件变化</span></span>
<span class="line"><span style="color:#24292e;">  const watcher = watchEnabled</span></span>
<span class="line"><span style="color:#24292e;">        ? chokidar.watch(</span></span>
<span class="line"><span style="color:#24292e;">        // config file dependencies and env file might be outside of root</span></span>
<span class="line"><span style="color:#24292e;">        [root, ...config.configFileDependencies, config.envDir], resolvedWatchOptions)</span></span>
<span class="line"><span style="color:#24292e;">        : createNoopWatcher(resolvedWatchOptions);</span></span></code></pre></div>`,16);function F(n,d,h,u,m,C){return l(),o("div",null,[s("h1",r,[e(a(n.$frontmatter.title)+" ",1),E]),s("ul",null,[s("li",null,[s("p",null,a(n.$frontmatter.description),1),y])]),i])}const g=p(c,[["render",F]]);export{A as __pageData,g as default};
